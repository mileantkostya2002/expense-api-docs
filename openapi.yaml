openapi: 3.0.0
info:
  title: Expense Management API
  version: 1.0.0
  description: API for managing expenses, reports, and attachments

servers:
  - url: https://your-domain.com
    description: Production server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Expense:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        total_amount_currency:
          type: number
        date:
          type: string
          format: date
        state:
          type: string
          enum: [draft, reported, approved, done, refused]

    CreateExpense:
      type: object
      required:
        - name
        - total_amount_currency
        - product_id
      properties:
        name:
          type: string
          example: "Taxi to client meeting"
        total_amount_currency:
          type: number
          example: 45.50
        product_id:
          type: integer
          example: 12
        date:
          type: string
          format: date
          example: "2025-10-06"
        description:
          type: string
          example: "Client meeting transportation"
        payment_mode:
          type: string
          enum: [own_account, company_account]
          example: "own_account"

paths:
  /api/v1/expenses:
    get:
      summary: Get list of expenses
      tags: [Expenses]
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: state
          in: query
          schema:
            type: string
            enum: [draft, reported, approved, done, refused]
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of expenses
        '401':
          description: Unauthorized

  /api/v1/expense:
    post:
      summary: Create new expense
      tags: [Expenses]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExpense'
      responses:
        '201':
          description: Expense created successfully
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized

  /api/v1/expense/{expense_id}:
    get:
      summary: Get single expense details
      tags: [Expenses]
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense details
        '404':
          description: Expense not found

    put:
      summary: Update expense
      tags: [Expenses]
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                total_amount_currency:
                  type: number
                date:
                  type: string
                  format: date
      responses:
        '200':
          description: Expense updated successfully
        '403':
          description: Cannot edit expense in current state

  /api/v1/expense/{expense_id}/delete:
    delete:
      summary: Delete expense
      tags: [Expenses]
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense deleted successfully
        '403':
          description: Cannot delete expense in current state

  /api/v1/expense/reports:
    get:
      summary: Get list of expense reports
      tags: [Reports]
      parameters:
        - name: state
          in: query
          schema:
            type: string
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of expense reports

  /api/v1/expense/create-report:
    post:
      summary: Create expense report
      tags: [Reports]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - expense_ids
              properties:
                name:
                  type: string
                  example: "Monthly Expenses October"
                expense_ids:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
      responses:
        '201':
          description: Report created successfully

  /api/v1/report/{report_id}:
    get:
      summary: Get report details
      tags: [Reports]
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report details with all expenses

  /api/v1/report/{report_id}/submit:
    post:
      summary: Submit report for approval
      tags: [Reports]
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report submitted successfully

  /api/v1/expense/{expense_id}/attachments:
    get:
      summary: Get list of attachments
      tags: [Attachments]
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of attachments

    post:
      summary: Upload attachment
      tags: [Attachments]
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file_name
                - file_data
              properties:
                file_name:
                  type: string
                  example: "receipt.pdf"
                file_data:
                  type: string
                  format: base64
                  example: "JVBERi0xLjQKJeLjz9MKMSAwIG..."
      responses:
        '201':
          description: Attachment created successfully

  /api/v1/expense/file/{expense_id}/attachments/{attachment_id}:
    get:
      summary: Download attachment file
      tags: [Attachments]
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: File binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /api/v1/expense/{expense_id}/attachment/{attachment_id}:
    delete:
      summary: Delete attachment
      tags: [Attachments]
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachment deleted successfully

  /api/v1/expense/categories:
    get:
      summary: Get expense categories
      tags: [Public]
      security: []
      responses:
        '200':
          description: List of expense categories

  /api/v1/expense/vendors:
    get:
      summary: Get vendors list
      tags: [Public]
      security: []
      responses:
        '200':
          description: List of vendors

  /api/v1/vehicles:
    get:
      summary: Get vehicles list
      tags: [Public]
      security: []
      responses:
        '200':
          description: List of available vehicles
