openapi: 3.0.0
info:
  title: Odoo Expense API
  version: 1.0.0
  description: API for managing employee expenses, expense reports, attachments, and related resources in Odoo.
servers:
  - url: https://your-odoo-domain.com
    description: Production server
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Employee API token from hr.employee.api_token field
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
    Expense:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        total_amount_currency:
          type: number
        currency:
          type: string
        date:
          type: string
          format: date
        state:
          type: string
          enum: [draft, reported, approved, done, refused]
        state_display:
          type: string
        payment_mode:
          type: string
          enum: [own_account, company_account]
        payment_mode_display:
          type: string
        company:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        product:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        vendor:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            name:
              type: string
        vehicle:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            name:
              type: string
        task:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            name:
              type: string
            partner_id:
              type: integer
              nullable: true
        taxes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              amount:
                type: number
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              mimetype:
                type: string
              file_size:
                type: integer
        attachment_count:
          type: integer
        receipt_image:
          type: integer
          nullable: true
        create_date:
          type: string
        write_date:
          type: string
    ExpenseReport:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        employee:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        company:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
        state:
          type: string
        state_display:
          type: string
        total_amount:
          type: number
        currency_id:
          type: integer
        currency_name:
          type: string
        expense_count:
          type: integer
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
        create_date:
          type: string
        write_date:
          type: string
        approval_date:
          type: string
          nullable: true
paths:
  /api/v1/expenses:
    get:
      summary: Get employee expenses list
      description: Returns a list of expenses for the authenticated employee. By default shows current month expenses. Supports filtering, sorting, and pagination.
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Number of records to return
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
          description: Offset for pagination
        - name: state
          in: query
          schema:
            type: string
            enum: [draft, reported, approved, done, refused]
          description: Filter by expense state
        - name: date_from
          in: query
          schema:
            type: string
            format: date
          description: Filter from date (YYYY-MM-DD)
        - name: date_to
          in: query
          schema:
            type: string
            format: date
          description: Filter to date (YYYY-MM-DD)
        - name: q
          in: query
          schema:
            type: string
          description: Search by name or description
        - name: sort_by
          in: query
          schema:
            type: string
            enum: [date, name, amount, create_date]
            default: date
          description: Sort field
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          description: Sort order
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Expense'
                  pagination:
                    type: object
                    properties:
                      total_count:
                        type: integer
                      limit:
                        type: integer
                      offset:
                        type: integer
                      has_next:
                        type: boolean
                      has_prev:
                        type: boolean
                  filters:
                    type: object
                  employee:
                    type: object
              example:
                success: true
                data:
                  - id: 123
                    name: "Hotel accommodation"
                    total_amount_currency: 150.00
                    currency: "EUR"
                    date: "2025-10-05"
                    state: "draft"
                    payment_mode: "own_account"
                pagination:
                  total_count: 45
                  limit: 20
                  offset: 0
                  has_next: true
                  has_prev: false
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/expense:
    post:
      summary: Create new expense
      description: Creates a new expense for the authenticated employee
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - total_amount_currency
                - product_id
              properties:
                name:
                  type: string
                  description: Expense description
                total_amount_currency:
                  type: number
                  description: Expense amount
                product_id:
                  type: integer
                  description: Product category ID
                payment_mode:
                  type: string
                  enum: [own_account, company_account]
                  default: own_account
                vendor_id:
                  type: integer
                  description: Vendor ID (required for company_account payment mode)
                date:
                  type: string
                  format: date
                description:
                  type: string
                tax_ids:
                  type: array
                  items:
                    type: integer
                task:
                  type: object
                  properties:
                    id:
                      type: integer
                vehicle:
                  type: object
                  properties:
                    id:
                      type: integer
      responses:
        '201':
          description: Expense created successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /api/v1/expense/{expense_id}:
    get:
      summary: Get single expense details
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Expense'
        '404':
          description: Expense not found
    put:
      summary: Update expense
      description: Updates expense (only in draft or reported state)
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                total_amount_currency:
                  type: number
                product_id:
                  type: integer
                payment_mode:
                  type: string
                vendor_id:
                  type: integer
                date:
                  type: string
                  format: date
                description:
                  type: string
                tax_ids:
                  type: array
                  items:
                    type: integer
                task:
                  type: object
                  properties:
                    id:
                      type: integer
                vehicle:
                  type: object
                  properties:
                    id:
                      type: integer
      responses:
        '200':
          description: Expense updated successfully
        '403':
          description: Cannot edit expense in current state
        '404':
          description: Expense not found
  /api/v1/expense/{expense_id}/delete:
    delete:
      summary: Delete expense
      description: Deletes expense (only in draft or reported state)
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense deleted successfully
        '403':
          description: Cannot delete expense in current state
        '404':
          description: Expense not found
  /api/v1/expense/reports:
    get:
      summary: Get expense reports list
      description: Returns a list of expense reports for the authenticated employee
      security:
        - bearerAuth: []
      parameters:
        - name: state
          in: query
          schema:
            type: string
          description: Filter by report state
        - name: q
          in: query
          schema:
            type: string
          description: Search by report name
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
        - name: sort_by
          in: query
          schema:
            type: string
            default: create_date
        - name: sort_order
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Successful response
  /api/v1/report/{report_id}:
    get:
      summary: Get single expense report details
      security:
        - bearerAuth: []
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/ExpenseReport'
        '404':
          description: Report not found
  /api/v1/expense/create-report:
    post:
      summary: Create expense report
      description: Creates an expense report with multiple expenses
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - expense_ids
              properties:
                name:
                  type: string
                  description: Report name (auto-generated if not provided)
                expense_ids:
                  type: array
                  items:
                    type: integer
                  description: List of expense IDs to include
                journal_id:
                  type: integer
                  description: Journal ID (optional)
      responses:
        '201':
          description: Report created successfully
        '400':
          description: Invalid request

  paths:
  /api/v1/report/{report_id}:
    put:
      summary: Update expense report
      description: |
        Updates an expense report by adding or removing expenses.
        
        **Important Rules:**
        - Only works for reports in **'draft'** state
        - All expenses must belong to the authenticated employee
        - Expenses must be in 'draft' or 'reported' state
        - Expenses cannot be in other active reports
        - **If expense_ids is an empty array [], the report will be automatically deleted**
        
        **Behavior:**
        - Replaces all expenses in the report with the provided list
        - Draft expenses are automatically changed to 'reported' state
        - Empty draft reports are automatically cleaned up
      tags:
        - Expense Reports
      parameters:
        - name: report_id
          in: path
          required: true
          description: ID of the expense report to update
          schema:
            type: integer
          example: 42
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReportRequest'
            examples:
              update_expenses:
                summary: Update report with new expenses
                value:
                  expense_ids: [101, 102, 103]
                  name: "Updated Business Trip - October 2025"
                  journal_id: 5
              
              remove_one_expense:
                summary: Remove one expense from report
                description: Keep only expenses 101 and 102, remove 103
                value:
                  expense_ids: [101, 102]
              
              delete_report:
                summary: Delete report (empty expense list)
                description: Passing an empty array will delete the entire report
                value:
                  expense_ids: []
      
      responses:
        '200':
          description: |
            Report updated successfully.
            
            **Note:** If expense_ids was empty, the report is deleted and you'll receive a DeleteReportResponse instead.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UpdateReportSuccessResponse'
                  - $ref: '#/components/schemas/DeleteReportResponse'
              examples:
                update_success:
                  summary: Report updated successfully
                  value:
                    success: true
                    report_id: 42
                    report_name: "Business Trip - October 2025"
                    employee_id: 15
                    employee_name: "John Doe"
                    company_id: 1
                    company_name: "My Company"
                    total_amount: 450.75
                    expense_count: 3
                    state: "draft"
                    expenses_updated:
                      - id: 101
                        state: "reported"
                      - id: 102
                        state: "reported"
                      - id: 103
                        state: "reported"
                    message: "Expense report updated successfully"
                
                report_deleted:
                  summary: Report deleted (empty expense_ids)
                  value:
                    success: true
                    report_deleted: true
                    report_id: 42
                    report_name: "Business Trip - October 2025"
                    message: "Expense report deleted because no expenses remained"
        
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                  - $ref: '#/components/schemas/ValidationErrorResponse'
                  - $ref: '#/components/schemas/StateErrorResponse'
              examples:
                empty_body:
                  summary: Empty request body
                  value:
                    error: "Empty request body. Please provide JSON data"
                
                invalid_json:
                  summary: Invalid JSON format
                  value:
                    error: "Invalid JSON format: Expecting value: line 1 column 1 (char 0)"
                
                missing_expense_ids:
                  summary: Missing expense_ids field
                  value:
                    error: "expense_ids list is required"
                
                wrong_state:
                  summary: Report not in draft state
                  value:
                    error: "Report can only be edited in \"draft\" state"
                    current_state: "approve"
                
                expenses_not_found:
                  summary: Some expenses don't exist
                  value:
                    error: "Some expenses not found"
                
                invalid_expense_state:
                  summary: Expenses in wrong state
                  value:
                    error: "Expenses must be in \"draft\" or \"reported\" state"
                    invalid_expense_ids: [105, 106]
                    invalid_states:
                      - id: 105
                        state: "approved"
                      - id: 106
                        state: "done"
                
                expenses_in_other_reports:
                  summary: Expenses already in other reports
                  value:
                    error: "Some expenses are already included in other reports"
                    expenses_in_reports:
                      - id: 107
                        sheet_id: 50
                        sheet_name: "Another Report"
                      - id: 108
                        sheet_id: 51
                        sheet_name: "Different Report"
        
        '403':
          description: Forbidden - not authorized to edit this report
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                  - $ref: '#/components/schemas/ValidationErrorResponse'
              examples:
                not_own_report:
                  summary: Report belongs to another employee
                  value:
                    error: "You can only edit your own expense reports"
                
                not_own_expenses:
                  summary: Some expenses belong to another employee
                  value:
                    error: "All expenses must belong to you"
                    invalid_expense_ids: [109, 110]
        
        '404':
          description: Expense report not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Expense report not found"
        
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error: Database connection failed"

  
  /api/v1/report/{report_id}/submit:
    post:
      summary: Submit expense report
      description: Submits expense report for approval
      security:
        - bearerAuth: []
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report submitted successfully
        '400':
          description: Cannot submit report in current state
  /api/v1/expense/{expense_id}/attachments:
    get:
      summary: Get expense attachments list
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
    post:
      summary: Create attachment for expense
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - file_name
                - file_data
              properties:
                file_name:
                  type: string
                  description: File name with extension
                file_data:
                  type: string
                  description: Base64 encoded file data
      responses:
        '201':
          description: Attachment created successfully
        '400':
          description: Invalid request
        '403':
          description: Cannot create attachment in current expense state
  /api/v1/expense/file/{expense_id}/attachments/{attachment_id}:
    get:
      summary: Download attachment file
      description: Returns the attachment file as binary data
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: File downloaded successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
        '403':
          description: Access denied
        '404':
          description: Attachment not found
  /api/v1/expense/{expense_id}/attachment/{attachment_id}:
    get:
      summary: Get attachment data
      description: Returns attachment metadata and base64 encoded data
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
    put:
      summary: Update attachment
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_name:
                  type: string
                file_data:
                  type: string
      responses:
        '200':
          description: Attachment updated successfully
    delete:
      summary: Delete attachment
      security:
        - bearerAuth: []
      parameters:
        - name: expense_id
          in: path
          required: true
          schema:
            type: integer
        - name: attachment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachment deleted successfully
  /api/v1/expense/categories:
    get:
      summary: Get expense categories
      description: Returns list of products that can be used for expenses (public endpoint)
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        default_code:
                          type: string
                        list_price:
                          type: number
                        uom_name:
                          type: string
                  count:
                    type: integer
  /api/v1/expense/vendors:
    get:
      summary: Get vendors list
      description: Returns list of vendors for company_account payment mode (public endpoint)
      security: []
      responses:
        '200':
          description: Successful response
  /api/v1/vehicles:
    get:
      summary: Get vehicles list
      description: Returns list of all available vehicles (public endpoint)
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  vehicles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        driver:
                          type: string
                          nullable: true
                        employee_id:
                          type: integer
                          nullable: true
